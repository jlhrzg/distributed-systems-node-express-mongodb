swagger: "2.0"
info:
  description: "This is a server API to store notebooks and notes"
  version: "1.0.0"
  title: "Distributed Systems Project"
tags:
- name: "notebook"
  description: "Create, read, update and delete of notebooks"
- name: "note"
  description: "Create, read, update and delete of notes"
schemes:
- "http"
paths:
  /api/notebook:
    post:
      tags:
      - "notebook"
      summary: "Add a new notebook"
      operationId: "addNotebook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Notebook information"
        required: true
        schema:
          $ref: "#/definitions/Notebook"
      responses:
        "405":
          description: "Invalid input"
    get:
      tags:
      - "notebook"
      summary: "Get notebooks"
      description: "Receive notebook"
      operationId: "getNotebooks"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Notebook"
  /api/notebook/{notebookId}:
    get:
      tags:
      - "notebook"
      summary: "Get notebook"
      operationId: "getNotebook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Notebook information to update"
        required: true
        schema:
          $ref: "#/definitions/Notebook"
      responses:
        "404":
          description: "Notebook not found"
        "405":
          description: "Validation exception"
    put:
      tags:
      - "notebook"
      summary: "Update an existing notebook"
      operationId: "updateNotebook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "notebookId"
        in: "path"
        description: "The notebook id that needs to be deleted"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Notebook information to update"
        required: true
        schema:
          $ref: "#/definitions/Notebook"
      responses:
        "404":
          description: "Notebook not found"
        "405":
          description: "Validation exception"
    delete:
      tags:
      - "notebook"
      summary: "Deletes an existing notebook"
      operationId: "deleteNotebook"
      produces:
      - "application/json"
      parameters:
      - name: "notebookId"
        in: "path"
        description: "The notebook id that needs to be deleted"
        required: true
        type: "string"
      responses:
        "404":
          description: "Notebook not found"
        "405":
          description: "Validation exception"
  /api/note:
    post:
      tags:
      - "note"
      summary: "Add a new note"
      operationId: "addNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Note information"
        required: true
        schema:
          $ref: "#/definitions/Note"
      responses:
        "405":
          description: "Invalid input"
    get:
      tags:
      - "note"
      summary: "Get notes"
      description: "Receive notes"
      operationId: "getNotes"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Note"
  /api/note/{noteId}:
    get:
      tags:
      - "note"
      summary: "Get note"
      operationId: "getNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Receive information about a note"
        required: true
        schema:
          $ref: "#/definitions/Note"
      responses:
        "404":
          description: "Note not found"
        "405":
          description: "Validation exception"
    put:
      tags:
      - "note"
      summary: "Update an existing note"
      operationId: "updateNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "noteId"
        in: "path"
        description: "The note id to update"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Note information to update"
        required: true
        schema:
          $ref: "#/definitions/Note"
      responses:
        "404":
          description: "Note not found"
        "405":
          description: "Validation exception"
    delete:
      tags:
      - "note"
      summary: "Deletes an existing note"
      operationId: "deleteNote"
      produces:
      - "application/json"
      parameters:
      - name: "noteId"
        in: "path"
        description: "The note id that needs to be deleted"
        required: true
        type: "string"
      responses:
        "404":
          description: "Note not found"
        "405":
          description: "Validation exception"

definitions:
  Notebook:
    type: "object"
    required:
    - "title"
    - "description"
    properties:
      _id:
        type: "string"
        format: "string"
      title:
        type: "string"
        example: "Distributed systems notebook"
      description:
        type: "string"
        example: "This notebook contains all information about the lecture distributed systems at DBWH Karlsruhe."
      createdAt:
        type: "string"
        example: "2022-05-08T21:06:26.405Z"
      updatedAt:
        type: "string"
        example: "2022-05-08T21:06:26.405Z"
  Note:
    type: "object"
    required:
    - "title"
    - "content"
    - "notebookId"
    properties:
      _id:
        type: "string"
        format: "string"
      title:
        type: "string"
        example: "Distributed systems"
      content:
        type: "string"
        example: "The content of the node."
      notebookId:
        type: "string"
        example: "The id of the notebook to assign the note to."
      createdAt:
        type: "string"
        example: "2022-05-08T21:06:26.405Z"
      updatedAt:
        type: "string"
        example: "2022-05-08T21:06:26.405Z"